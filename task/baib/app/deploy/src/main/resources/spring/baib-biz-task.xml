<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/task   
		   http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-autowire="byName">

<!-- 	<task:annotation-driven /> -->

	<!-- 名字必须是applicationEventMulticaster和messageSource是一样的，默认找这个名字的对象 --> 
	<!-- 名字必须是applicationEventMulticaster，因为AbstractApplicationContext默认找个 --> 
	<!-- 如果找不到就new一个，但不是异步调用而是同步调用 --> 
<!-- 	<bean id="applicationEventMulticaster" -->
<!-- 		class="org.springframework.context.event.SimpleApplicationEventMulticaster">   -->
		<!-- <property name="taskExecutor" ref="taskExecutor" />  -->
		<!-- 注入任务执行器 这样就实现了异步调用（缺点是全局的，要么全部异步，要么全部同步（删除这个属性即是同步）） -->
		<!-- 	</bean>	 -->

 	<!-- 线程执行器 --> 
<!-- 	<bean id="threadExecutor" -->
<!-- 		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"> -->
<!-- 		<property name="corePoolSize" value="25" /> -->
<!-- 		<property name="maxPoolSize" value="150" /> -->
<!-- 		<property name="queueCapacity" value="1000" /> -->
<!-- 	</bean> -->
	


</beans>